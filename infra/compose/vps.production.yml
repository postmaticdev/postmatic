name: ${PROD_COMPOSE_PROJECT:-postmatic_vps_production}

services:
  db:
    image: postgres:${PROD_POSTGRES_TAG:-15-alpine}
    container_name: ${PROD_PREFIX:-postmatic_prod}_db
    environment:
      POSTGRES_DB: ${PROD_DATABASE_NAME}
      POSTGRES_USER: ${PROD_DATABASE_USER}
      POSTGRES_PASSWORD: ${PROD_DATABASE_PASSWORD}
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:${PROD_REDIS_TAG:-7-alpine}
    container_name: ${PROD_PREFIX:-postmatic_prod}_redis
    command: ["redis-server","--save","","--appendonly","no","--requirepass","${PROD_REDIS_PASSWORD}"]
    restart: unless-stopped

  api:
    build: ../../apps/backend-service
    container_name: ${PROD_PREFIX:-postmatic_prod}_api
    env_file:
      - ../../apps/backend-service/.env.production
    depends_on:
      - db
      - redis
    networks: [default, traefik_proxy]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-prod.rule=Host(`api.postmatic.id`)"
      - "traefik.http.routers.api-prod.entrypoints=websecure"
      - "traefik.http.routers.api-prod.tls=true"
      - "traefik.http.routers.api-prod.tls.certresolver=le-http"
      - "traefik.http.routers.api-prod.middlewares=security-headers@file,compress@file,limit-20mb@file"
      - "traefik.http.services.api-prod.loadbalancer.server.port=3000"
    restart: unless-stopped

  dashboard:
    build:
      context: ../../apps/dashboard
      args:
        ENV_STAGE: "${PROD_ENV_STAGE:-production}"
        API_ORIGIN: "${PROD_API_ORIGIN_INTERNAL:-http://api:3000}"
        NEXT_PUBLIC_API_ORIGIN: "${PROD_NEXT_PUBLIC_API_ORIGIN:-https://api.postmatic.id}"
    container_name: ${PROD_PREFIX:-postmatic_prod}_dashboard
    env_file:
      - ../../apps/dashboard/.env.production
    depends_on:
      - api
    networks: [default, traefik_proxy]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard-prod.rule=Host(`dashboard.postmatic.id`)"
      - "traefik.http.routers.dashboard-prod.entrypoints=websecure"
      - "traefik.http.routers.dashboard-prod.tls=true"
      - "traefik.http.routers.dashboard-prod.tls.certresolver=le-http"
      - "traefik.http.routers.dashboard-prod.middlewares=security-headers@file,compress@file"
      - "traefik.http.services.dashboard-prod.loadbalancer.server.port=3000"
    restart: unless-stopped

  landing:
    build:
      context: ../../apps/landing-page
      args:
        ENV_STAGE: "${PROD_ENV_STAGE:-production}"
    container_name: ${PROD_PREFIX:-postmatic_prod}_landing
    env_file:
      - ../../apps/landing-page/.env.production
    networks: [default, traefik_proxy]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.landing-prod.rule=Host(`postmatic.id`)"
      - "traefik.http.routers.landing-prod.entrypoints=websecure"
      - "traefik.http.routers.landing-prod.tls=true"
      - "traefik.http.routers.landing-prod.tls.certresolver=le-http"
      - "traefik.http.routers.landing-prod.middlewares=security-headers@file,compress@file"
      - "traefik.http.services.landing-prod.loadbalancer.server.port=3000"

      - "traefik.http.routers.landing-www.rule=Host(`www.postmatic.id`)"
      - "traefik.http.routers.landing-www.entrypoints=websecure"
      - "traefik.http.routers.landing-www.tls=true"
      - "traefik.http.routers.landing-www.tls.certresolver=le-http"
      - "traefik.http.routers.landing-www.middlewares=landing-www-redirect@file"
    restart: unless-stopped

networks:
  traefik_proxy:
    external: true

volumes:
  pgdata_prod:
