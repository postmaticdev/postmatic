# hapus/ubah blok ini
# env:
#   REGISTRY: ghcr.io
#   IMAGE_NAMESPACE: ghcr.io/postmaticdev

# ganti dengan:
env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      ENV_NAME: ${{ steps.meta.outputs.ENV_NAME }}
      SHORT_SHA: ${{ steps.meta.outputs.SHORT_SHA }}
      NS: ${{ steps.ns.outputs.NS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref || github.ref }}

      - name: Derive environment
        id: meta
        run: |
          if [[ "${GITHUB_EVENT_NAME}" == "workflow_dispatch" ]]; then
            ENV_NAME="${{ github.event.inputs.environment }}"
          else
            case "${GITHUB_REF_NAME}" in
              stg)  ENV_NAME="staging" ;;
              main) ENV_NAME="production" ;;
              master) ENV_NAME="staging" ;;
              *) echo "Unknown branch"; exit 1 ;;
            esac
          fi
          SHORT_SHA=$(git rev-parse --short=8 HEAD)
          echo "ENV_NAME=$ENV_NAME"   >> $GITHUB_OUTPUT
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Compute image namespace (GHCR)
        id: ns
        shell: bash
        run: |
          echo "NS=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}" >> $GITHUB_OUTPUT
          echo "Using namespace: ghcr.io/${GITHUB_REPOSITORY_OWNER,,}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ===== API =====
      - name: Build & push API
        uses: docker/build-push-action@v6
        with:
          context: ./apps/backend-service
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.ns.outputs.NS }}/postmatic-api:${{ steps.meta.outputs.ENV_NAME }}
            ${{ steps.ns.outputs.NS }}/postmatic-api:${{ steps.meta.outputs.ENV_NAME }}-${{ steps.meta.outputs.SHORT_SHA }}

      # ===== DASHBOARD =====
      - name: Build & push Dashboard
        uses: docker/build-push-action@v6
        with:
          context: ./apps/dashboard
          platforms: linux/amd64
          push: true
          build-args: |
            ENV_STAGE=${{ steps.meta.outputs.ENV_NAME }}
          tags: |
            ${{ steps.ns.outputs.NS }}/postmatic-dashboard:${{ steps.meta.outputs.ENV_NAME }}
            ${{ steps.ns.outputs.NS }}/postmatic-dashboard:${{ steps.meta.outputs.ENV_NAME }}-${{ steps.meta.outputs.SHORT_SHA }}

      # ===== LANDING =====
      - name: Build & push Landing
        uses: docker/build-push-action@v6
        with:
          context: ./apps/landing-page
          platforms: linux/amd64
          push: true
          build-args: |
            ENV_STAGE=${{ steps.meta.outputs.ENV_NAME }}
          tags: |
            ${{ steps.ns.outputs.NS }}/postmatic-landing:${{ steps.meta.outputs.ENV_NAME }}
            ${{ steps.ns.outputs.NS }}/postmatic-landing:${{ steps.meta.outputs.ENV_NAME }}-${{ steps.meta.outputs.SHORT_SHA }}
