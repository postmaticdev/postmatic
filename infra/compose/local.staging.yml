name: ${STAGING_COMPOSE_PROJECT:-postmatic_local_staging}

services:
  db:
    image: postgres:${STAGING_POSTGRES_TAG:-15-alpine}
    container_name: ${STAGING_PREFIX:-postmatic_stg}_db
    environment:
      POSTGRES_DB: ${STAGING_DATABASE_NAME}
      POSTGRES_USER: ${STAGING_DATABASE_USER}
      POSTGRES_PASSWORD: ${STAGING_DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${STAGING_DATABASE_USER} -d ${STAGING_DATABASE_NAME}"]
      interval: 3s
      timeout: 3s
      retries: 10
    ports:
      - "0.0.0.0:${STAGING_DATABASE_PORT:-15432}:5432"
    volumes:
      - pgdata_stg:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:${STAGING_REDIS_TAG:-7-alpine}
    container_name: ${STAGING_PREFIX:-postmatic_stg}_redis
    command: ["redis-server","--save","","--appendonly","no","--requirepass","${STAGING_REDIS_PASSWORD}"]
    ports:
      - "0.0.0.0:${STAGING_REDIS_PORT:-16379}:6379"
    restart: unless-stopped

  api:
    build: ../../apps/backend-service
    container_name: ${STAGING_PREFIX:-postmatic_stg}_api
    env_file:
      - ../../apps/backend-service/.env.staging
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "${STAGING_API_PORT:-1001}:3000"
    restart: unless-stopped

  dashboard:
    build:
      context: ../../apps/dashboard
      args:
        ENV_STAGE: "${STAGING_ENV_STAGE:-staging}"
        API_ORIGIN: "${STAGING_API_ORIGIN_INTERNAL:-http://api:3000}"
        NEXT_PUBLIC_API_ORIGIN: "${STAGING_NEXT_PUBLIC_API_ORIGIN:-https://api-staging.postmatic.id}"
    container_name: ${STAGING_PREFIX:-postmatic_stg}_dashboard
    env_file:
      - ../../apps/dashboard/.env.staging
    depends_on:
      - api
    ports:
      - "${STAGING_DASHBOARD_PORT:-1002}:3000"
    restart: unless-stopped

  landing:
    build:
      context: ../../apps/landing-page
      args:
        ENV_STAGE: "${STAGING_ENV_STAGE:-staging}"
    container_name: ${STAGING_PREFIX:-postmatic_stg}_landing
    env_file:
      - ../../apps/landing-page/.env.staging
    ports:
      - "${STAGING_LANDING_PORT:-1003}:3000"
    restart: unless-stopped

volumes:
  pgdata_stg:
